name: ci-validate

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  conflict-check:
    name: Check for merge conflict markers
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check for git merge conflict markers
        run: |
          set -euo pipefail
          echo "Scanning repository for conflict markers (excludes node_modules)..."
          if grep -R --line-number --exclude-dir=node_modules '^<<<<<<< ' . >/dev/null 2>&1; then
            echo "ERROR: Found git merge conflict markers (<<<<<<<) in repository. Please resolve them and push again.";
            grep -R --line-number --exclude-dir=node_modules '^<<<<<<< ' || true
            exit 1
          else
            echo "No conflict markers found."
          fi

  validate-json:
    name: Validate package.json files parse as JSON
    runs-on: ubuntu-latest
    needs: [conflict-check]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Validate package.json files
        run: |
          set -euo pipefail
          node -e "const fs=require('fs'); const files=['package.json','app/package.json','web/package.json','proxy/package.json']; let ok=true; files.forEach(f=>{ try{ JSON.parse(fs.readFileSync(f,'utf8')); console.log(f+' ok'); }catch(e){ console.error(f+' ERR: '+e.message); ok=false; }}); if(!ok) process.exit(1);"

  pnpm-frozen:
    name: Install dependencies with frozen lockfile
    runs-on: ubuntu-latest
    needs: [validate-json]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.0.0
      - name: Install with frozen lockfile
        run: pnpm install --frozen-lockfile
